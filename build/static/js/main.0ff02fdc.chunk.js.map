{"version":3,"sources":["components/Persons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Person","person","handleDeleteBtn","name","number","onClick","value","id","Persons","persons","map","key","baseUrl","axios","get","then","res","data","newPersonObj","post","delete","put","Notification","notificationObj","successStye","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","failureStyle","notificationClass","success","style","message","PersonForm","newName","newNumber","handleOnNameChange","handleOnNumberChange","handleFormSubmit","onSubmit","type","onChange","Filter","filter","handleOnChange","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotificationObj","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","e","target","preventDefault","newNumberMessage","find","window","confirm","modifiedPerson","returnPerson","catch","modifyNumber","concat","console","log","response","setTimeout","deletedId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ff02fdc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({person, handleDeleteBtn}) => {\n  return (\n    <div>\n      {person.name} {person.number + '  '}\n      <button onClick={handleDeleteBtn} value={person.id}>delete</button>\n    </div>\n  )\n}\n\nconst Persons = ({persons, handleDeleteBtn}) => {\n  return (\n    <>\n      {persons.map(person => <Person \n        key={person.name} \n        person={person}\n        handleDeleteBtn={handleDeleteBtn}\n        />\n      )}\n    </>\n  )\n}\n\nexport default Persons;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n// 'https://mighty-beyond-80685.herokuapp.com/api/persons'\n// 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then(res => res.data);\n};\n\nconst create = (newPersonObj) => {\n  const req = axios.post(baseUrl, newPersonObj)\n  return req.then(res => res.data);\n};\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`);\n  return req.then(() => id);\n};\n\nconst edit = (id, newPersonObj) => {\n  const req = axios.put(`${baseUrl}/${id}`, newPersonObj);\n  return req.then(res => res.data);\n};\n\nexport default {getAll, create, remove, edit}","import React from 'react';\n\nconst clearNotification = (clearStateFunc) => {\n  setTimeout(clearStateFunc, 5000);\n}\n\nconst Notification = ({notificationObj}) => {\n  const successStye = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  };\n\n  const failureStyle = {...successStye, color: 'red'};\n  \n  if (notificationObj === null) {\n    return null;\n  };\n\n  const notificationClass = notificationObj.success\n    ? successStye\n    : failureStyle;\n\n  return (\n    <div style={notificationClass}>\n      {notificationObj.message}\n    </div>\n  );\n}\n\nexport default Notification;\nexport {clearNotification}","import React, { useState, useEffect } from 'react';\nimport Persons from './Persons';\nimport personService from './../services/persons';\nimport Notification, {clearNotification} from './Notification';\n\nconst PersonForm = ({newName, newNumber, handleOnNameChange, handleOnNumberChange, handleFormSubmit}) => {\n  return (\n    <form onSubmit={handleFormSubmit}>\n    <div>\n      name: <input value={newName} type=\"text\" onChange={handleOnNameChange}/>\n    </div>\n    <div>\n      number: <input value={newNumber} type=\"text\" onChange={handleOnNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Filter = ({filter, handleOnChange}) => {\n  return (\n    <div>\n      filter contacts by name: <input value={filter} onChange={handleOnChange}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [ notificationObj, setNotificationObj] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const personsToShow = (filter === '') \n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n  const duplicateName = (name) => {\n   return !!(persons.find(person => person.name.toLowerCase() === name.toLowerCase()));\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  }\n\n  const handleDeletePerson = (e) => {\n    const id = e.target.value;\n    const name = persons.find(person => person.id === id).name;\n    if (window.confirm(`Delete ${name}`)) {\n      personService\n        .remove(id)\n        .then(deletedId => {\n          setPersons(persons.filter(person => person.id !== deletedId))\n        })\n    }\n  }\n\n  const modifyNumber = () => {\n    const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n    const modifiedPerson = {...person, number: newNumber, name: newName};\n\n    personService\n      .edit(person.id, modifiedPerson)\n      .then(returnPerson => {\n        setPersons(persons.map(person => { \n          return person.name.toLowerCase() === returnPerson.name.toLowerCase()\n            ? returnPerson\n            : person\n        }));\n        setNotificationObj({success: true, message: `Modifed the number of ${returnPerson.name} to ${returnPerson.number}`});\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(e => {\n        setNotificationObj({success: false, message: `Information of ${newName} has already been removed from the server`});\n        setNewName('');\n        setNewNumber('');\n      });\n  }\n\n  const addPerson = () => {\n    const newPersonObj = { name: newName, number: newNumber };\n    personService\n      .create(newPersonObj)\n      .then(returnPerson => {\n        setPersons(persons.concat(returnPerson));\n        setNotificationObj({success: true, message: `Added ${returnPerson.name}`});\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(e => {\n        console.log(`${e}`)\n        console.log(`${e.response}`)\n        setNotificationObj({success: false, message: `${e.response.data}`});\n      });\n  }\n\n  const handlePersonFormSubmit = (e) => {\n    e.preventDefault();\n    const newNumberMessage = `${newName} is already in the phonebook, ` +\n      `do you want to update the number?`;\n\n    if (duplicateName(newName)) {\n      // if (newNumber === '') return alert(`${newName} is already added to phonebook`);\n      if (window.confirm(newNumberMessage)) modifyNumber();\n    } else {\n      addPerson();\n    }\n    clearNotification(() => setNotificationObj(null));\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationObj={notificationObj} />\n      <Filter filter={filter} handleOnChange={handleFilterChange}/>\n      <h3>Add a new Contact</h3>\n      <PersonForm \n        newName={newName} \n        newNumber={newNumber} \n        handleFormSubmit={handlePersonFormSubmit}\n        handleOnNameChange={handleNameChange}\n        handleOnNumberChange={handleNumberChange}\n      />\n      <h3>Contacts</h3>\n      <Persons persons={personsToShow} handleDeleteBtn={handleDeletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}